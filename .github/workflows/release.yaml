name: Release to PyPI

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build package
        run: python -m build

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  get-version:
    runs-on: ubuntu-latest
    environment:
      name: release
    needs: build-and-publish
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep -Po '(?<=version = ")([^"]+)' pyproject.toml)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  github-release:
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      contents: write
      pull-requests: write
    needs: get-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Generate changelog from commits
        id: changelog
        run: |
          git fetch --tags
          # Get the latest tag reachable from HEAD
          PREV_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          REPO_URL="https://github.com/${GITHUB_REPOSITORY}"
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag exists, include all commits
            git log --pretty=format:"* [%h]($REPO_URL/commit/%H) %s" > commits.txt
          else
            # Include all commits since the previous tag
            git log $PREV_TAG..HEAD --pretty=format:"* [%h]($REPO_URL/commit/%H) %s" > commits.txt
          fi
          
          echo "body=$(cat commits.txt | sed ':a;N;$!ba;s/\n/\\n/g')" >> $GITHUB_OUTPUT


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.get-version.outputs.version }}
          name: Release v${{ needs.get-version.outputs.version }}
          body: ${{ steps.changelog.outputs.body }}
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
